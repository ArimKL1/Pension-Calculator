<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Pension Calculator</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 40px;
      background: #f5f5f5;
    }
    label {
      display: block;
      margin-top: 10px;
    }
    input {
      margin-top: 5px;
      padding: 5px;
      width: 200px;
    }
    button {
      margin-top: 20px;
      padding: 10px 20px;
    }
    #results {
      margin-top: 30px;
      padding: 15px;
      background: #fff;
      border: 1px solid #ccc;
      width: fit-content;
    }
  </style>
</head>
<body>

<h1>Pension Calculator</h1>

<form id="pensionForm">
  <label>Current Age: <input type="number" id="currentAge" value="40" required></label>
  <label>Retirement Age: <input type="number" id="retirementAge" value="60" required></label>
  <label>Current Pension Savings ($): <input type="number" id="currentSavings" value="0" required></label>
  <label>Annual Contribution ($): <input type="number" id="annualContribution" value="6000" required></label>
  <label>Expected Annual Return (%): <input type="number" step="0.01" id="annualReturn" value="5" required></label>
  <label>Monthly Drawdown in Retirement ($): <input type="number" id="monthlyDrawdown" value="500" required></label>
  <button type="submit">Calculate</button>
</form>

<div id="results"></div>

<script>
document.getElementById('pensionForm').addEventListener('submit', function(event) {
  event.preventDefault();

  // Inputs
  const currentAge = parseInt(document.getElementById('currentAge').value);
  const retirementAge = parseInt(document.getElementById('retirementAge').value);
  const currentSavings = parseFloat(document.getElementById('currentSavings').value);
  const annualContribution = parseFloat(document.getElementById('annualContribution').value);
  const annualReturn = parseFloat(document.getElementById('annualReturn').value) / 100;
  const monthlyDrawdown = parseFloat(document.getElementById('monthlyDrawdown').value);

  const yearsToRetirement = retirementAge - currentAge;

  // Future Value Calculation (compound annually)
  const futureValue = currentSavings * Math.pow(1 + annualReturn, yearsToRetirement) +
    annualContribution * ((Math.pow(1 + annualReturn, yearsToRetirement) - 1) / annualReturn);

  // Monthly rate for drawdown phase
  const monthlyRate = Math.pow(1 + annualReturn, 1 / 12) - 1;

  // NPER to calculate how many months it lasts
  const monthsLasting = Math.floor(Math.log(1 / (1 - (monthlyRate * futureValue / monthlyDrawdown))) / Math.log(1 + monthlyRate));

  // Optional: PMT for estimated monthly if lasting 30 years (360 months)
  const estimatedMonthlyIncome = futureValue * (monthlyRate / (1 - Math.pow(1 + monthlyRate, -360)));

  // Output
  document.getElementById('results').innerHTML = `
    <h2>Results</h2>
    <p><strong>Total Fund at Retirement:</strong> $${futureValue.toFixed(2)}</p>
    <p><strong>How Long It Will Last (with $${monthlyDrawdown} drawdown):</strong> ${Math.floor(monthsLasting / 12)} years and ${monthsLasting % 12} months</p>
    <p><strong>Max Sustainable Monthly Income (for 30 years):</strong> $${estimatedMonthlyIncome.toFixed(2)}</p>
  `;
});
</script>

</body>
</html>
